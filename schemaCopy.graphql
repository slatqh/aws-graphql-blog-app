type Blog @model {
  id: ID!
  name: String!
  posts: [Post] @connection(name: "BlogPosts")
}
type Post
  @model
  @auth(
    rules: [
      {
        allow: owner
        ownerField: "owner"
        operations: [create, update, delete]
      }
    ]
  ) {
  id: ID!
  message: String
  ownerID: String
  description: String
  createdAt: String
  owner: String
  postAuthor: User @connection(name: "PostAuthor")
  images: [S3Object]
  title: String!
  blog: Blog @connection(name: "BlogPosts")
  comments: [Comment] @connection(name: "PostComments")
}
type Comment @model {
  id: ID!
  content: String
  post: Post @connection(name: "PostComments")
  commentAuthor: User @connection(name: "CommentAuthor")
}

type S3Object {
  bucket: String!
  key: String!
  region: String!
}

type User @model  @auth(
    rules: [
      {
        allow: owner
        ownerField: "owner"
        operations: [create, update, delete]
      }
    ]
  ) {
  id: ID!
  owner: String
  authID: String
  firstName: String
  lastName: String
  username: String
  phone: String
  email: String
  avatar: S3Object
  instrument: String
  wallPost: [UserWallPost] @connection (name:"UserWallPost")
  userpost: [Post] @connection(name: "PostAuthor")
  usercomment: [Comment] @connection(name: "CommentAuthor")
}
type UserWallPost @model {
  id: ID!
  message: String
  title: String
  userWallPost: User @connection(name:"UserWallPost")
}
